@model DocumentRepositoryOnline.Models.Search

@{
    ViewBag.Title = "SearchGroup";
    Layout = "~/Views/Shared/_LayoutLoggedIn.cshtml";
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h2 class="centeredText">Search</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pagesMin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pagesMin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pagesMin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pagesMax, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pagesMax, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pagesMax, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lastModifiedMin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.lastModifiedMin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lastModifiedMin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lastModifiedMax, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.lastModifiedMax, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lastModifiedMax, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.creationDateMin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.creationDateMin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.creationDateMin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.creationDateMax, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.creationDateMax, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.creationDateMax, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fileSizeMin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fileSizeMin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fileSizeMin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fileSizeMax, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fileSizeMax, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fileSizeMax, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.extension, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.extension, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.extension, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Search" class="btn btn-default myButton" />
            </div>
        </div>
    </div>
}


<div class="bs-docs-section">
    <div class="row">
        <div class="col-lg-12">
            <div class="page-header">
                <h2 class="boldText">Search results</h2>
            </div>

            <div class="bs-component">
                <table class="table table-striped table-hover ">
                    <thead>
                        <tr>
                            <th>Last modified</th>
                            <th>Date created</th>
                            <th>Filesize</th>
                            <th>Extension</th>
                            <th>Author</th>
                            <th>Title</th>
                            <th>Pages</th>
                            <th>Relevant content</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null)
                        {
                            foreach (DocumentRepositoryOnline.DocumentRepository.Record record in Model.recordList)
                            {
                                if (record.isCorrectPath)
                                {
                                    <tr>
                                        <td>@record.Last_modified</td>
                                        <td>@record.Date_created</td>
                                        <td>@record.Filesize</td>
                                        <td>@record.Extension</td>
                                        <td>@record.Author</td>
                                        <td>@record.Title</td>
                                        <td>@record.Pages</td>
                                        <td>@record.RelevantContent</td>
                                        <td>
                                            @using (Html.BeginForm("Download", "Storage", new { path = @record.Local_path + "\\" + record.Title }))
                                            {
                                                <button class="btn btn-primary" title="Download" type="submit">Download</button>
                                            }
                                        </td>
                                        <td>
                                            @using (Html.BeginForm("OpenFolder", "Storage", new { folderPath = @record.Local_path }))
                                            {
                                                <button class="btn btn-success" title="Open" type="submit">Open</button>
                                            }
                                        </td>
                                    </tr>
                                }
                            }
                        }
                    </tbody>
                </table>
                <div id="source-button" class="btn btn-primary btn-xs" style="display: none;">&lt; &gt;</div>
            </div><!-- /example -->
        </div>
    </div>
</div>



<style>
        .centeredText {
        text-align: center;
        font-weight: bold;
    }
        .boldText{
            font-weight: bold;
        }
            .myButton {
        position: relative;
        margin: auto;
        box-sizing: border-box;
        width: 19%;
        font-size: 20px;
    }
</style>